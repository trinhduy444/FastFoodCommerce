package com.example.SpringCommerceShop.Modal;

import java.util.ArrayList;
import java.util.List;

public class OrdersExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public OrdersExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdOrderIsNull() {
			addCriterion("id_order is null");
			return (Criteria) this;
		}

		public Criteria andIdOrderIsNotNull() {
			addCriterion("id_order is not null");
			return (Criteria) this;
		}

		public Criteria andIdOrderEqualTo(String value) {
			addCriterion("id_order =", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderNotEqualTo(String value) {
			addCriterion("id_order <>", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderGreaterThan(String value) {
			addCriterion("id_order >", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderGreaterThanOrEqualTo(String value) {
			addCriterion("id_order >=", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderLessThan(String value) {
			addCriterion("id_order <", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderLessThanOrEqualTo(String value) {
			addCriterion("id_order <=", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderLike(String value) {
			addCriterion("id_order like", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderNotLike(String value) {
			addCriterion("id_order not like", value, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderIn(List<String> values) {
			addCriterion("id_order in", values, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderNotIn(List<String> values) {
			addCriterion("id_order not in", values, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderBetween(String value1, String value2) {
			addCriterion("id_order between", value1, value2, "idOrder");
			return (Criteria) this;
		}

		public Criteria andIdOrderNotBetween(String value1, String value2) {
			addCriterion("id_order not between", value1, value2, "idOrder");
			return (Criteria) this;
		}

		public Criteria andNameUserIsNull() {
			addCriterion("name_user is null");
			return (Criteria) this;
		}

		public Criteria andNameUserIsNotNull() {
			addCriterion("name_user is not null");
			return (Criteria) this;
		}

		public Criteria andNameUserEqualTo(String value) {
			addCriterion("name_user =", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserNotEqualTo(String value) {
			addCriterion("name_user <>", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserGreaterThan(String value) {
			addCriterion("name_user >", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserGreaterThanOrEqualTo(String value) {
			addCriterion("name_user >=", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserLessThan(String value) {
			addCriterion("name_user <", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserLessThanOrEqualTo(String value) {
			addCriterion("name_user <=", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserLike(String value) {
			addCriterion("name_user like", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserNotLike(String value) {
			addCriterion("name_user not like", value, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserIn(List<String> values) {
			addCriterion("name_user in", values, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserNotIn(List<String> values) {
			addCriterion("name_user not in", values, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserBetween(String value1, String value2) {
			addCriterion("name_user between", value1, value2, "nameUser");
			return (Criteria) this;
		}

		public Criteria andNameUserNotBetween(String value1, String value2) {
			addCriterion("name_user not between", value1, value2, "nameUser");
			return (Criteria) this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("address is null");
			return (Criteria) this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("address is not null");
			return (Criteria) this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("address =", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("address <>", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("address >", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("address >=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("address <", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("address <=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("address like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("address not like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressIn(List<String> values) {
			addCriterion("address in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotIn(List<String> values) {
			addCriterion("address not in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("address between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("address not between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("phone is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("phone is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("phone like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("phone not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("phone in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("phone not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("phone between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("phone not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andEmailUserIsNull() {
			addCriterion("email_user is null");
			return (Criteria) this;
		}

		public Criteria andEmailUserIsNotNull() {
			addCriterion("email_user is not null");
			return (Criteria) this;
		}

		public Criteria andEmailUserEqualTo(String value) {
			addCriterion("email_user =", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserNotEqualTo(String value) {
			addCriterion("email_user <>", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserGreaterThan(String value) {
			addCriterion("email_user >", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserGreaterThanOrEqualTo(String value) {
			addCriterion("email_user >=", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserLessThan(String value) {
			addCriterion("email_user <", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserLessThanOrEqualTo(String value) {
			addCriterion("email_user <=", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserLike(String value) {
			addCriterion("email_user like", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserNotLike(String value) {
			addCriterion("email_user not like", value, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserIn(List<String> values) {
			addCriterion("email_user in", values, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserNotIn(List<String> values) {
			addCriterion("email_user not in", values, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserBetween(String value1, String value2) {
			addCriterion("email_user between", value1, value2, "emailUser");
			return (Criteria) this;
		}

		public Criteria andEmailUserNotBetween(String value1, String value2) {
			addCriterion("email_user not between", value1, value2, "emailUser");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIsNull() {
			addCriterion("total_price is null");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIsNotNull() {
			addCriterion("total_price is not null");
			return (Criteria) this;
		}

		public Criteria andTotalPriceEqualTo(Integer value) {
			addCriterion("total_price =", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotEqualTo(Integer value) {
			addCriterion("total_price <>", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceGreaterThan(Integer value) {
			addCriterion("total_price >", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceGreaterThanOrEqualTo(Integer value) {
			addCriterion("total_price >=", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceLessThan(Integer value) {
			addCriterion("total_price <", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceLessThanOrEqualTo(Integer value) {
			addCriterion("total_price <=", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIn(List<Integer> values) {
			addCriterion("total_price in", values, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotIn(List<Integer> values) {
			addCriterion("total_price not in", values, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceBetween(Integer value1, Integer value2) {
			addCriterion("total_price between", value1, value2, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotBetween(Integer value1, Integer value2) {
			addCriterion("total_price not between", value1, value2, "totalPrice");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orders
	 * @mbg.generated  Sun Apr 09 12:47:54 ICT 2023
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 02 00:23:29 ICT 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}